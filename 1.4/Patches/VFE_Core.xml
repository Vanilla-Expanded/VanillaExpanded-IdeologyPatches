<?xml version="1.0" encoding="utf-8"?>
<Patch>
  <Operation Class="PatchOperationFindMod">
    <mods>
      <li>Vanilla Furniture Expanded</li>
    </mods>
    <match Class="PatchOperationSequence">
      <operations>
        <li Class="PatchOperationAdd">
          <xpath>/Defs/RitualObligationTargetFilterDef[defName="RitualSpotOrCampfireParty"]/thingDefs</xpath>
          <value>
            <li>Stone_Campfire</li>
            <li>Stone_DarklightCampfire</li>
          </value>
        </li>
        <li Class="PatchOperationAdd">
          <xpath>/Defs/RitualOutcomeEffectDef[defName="CelebrationPartyDanceDrum"]/comps/li[@Class="RitualOutcomeComp_RitualTargetDefs"]/defs</xpath>
          <value>
            <li>Stone_Campfire</li>
            <li>Stone_DarklightCampfire</li>
          </value>
        </li>
        <li Class="PatchOperationAdd">
          <xpath>/Defs/RitualBehaviorDef[defName="CelebrationPartyDanceDrum"]/stages/li[defaultDuty="PartyDance"]/failTriggers</xpath>
          <value>
            <li Class="StageFailTrigger_TargetThingMissing">
              <onlyIfTargetIsOfDef>Stone_Campfire</onlyIfTargetIsOfDef>
              <desc>Campfire is missing.</desc>
            </li>
            <li Class="StageFailTrigger_TargetNotLit">
              <onlyIfTargetIsOfDef>Stone_Campfire</onlyIfTargetIsOfDef>
              <desc>Campfire is not lit.</desc>
            </li>
            <li Class="StageFailTrigger_NoThingPresent">
              <onlyIfTargetIsOfDef>Stone_Campfire</onlyIfTargetIsOfDef>
              <thingDef>Drum</thingDef>
              <desc>No drums.</desc>
            </li>
          </value>
        </li>
        <li Class="PatchOperationAdd">
          <xpath>/Defs/RitualBehaviorDef[defName="CelebrationPartyDanceDrum"]/stages/li[defaultDuty="PartyDance"]/failTriggers</xpath>
          <value>
            <li Class="StageFailTrigger_TargetThingMissing">
              <onlyIfTargetIsOfDef>Stone_DarklightCampfire</onlyIfTargetIsOfDef>
              <desc>Darklight campfire is missing.</desc>
            </li>
            <li Class="StageFailTrigger_TargetNotLit">
              <onlyIfTargetIsOfDef>Stone_DarklightCampfire</onlyIfTargetIsOfDef>
              <desc>Darklight campfire is not lit.</desc>
            </li>
            <li Class="StageFailTrigger_NoThingPresent">
              <onlyIfTargetIsOfDef>Stone_DarklightCampfire</onlyIfTargetIsOfDef>
              <thingDef>Drum</thingDef>
              <desc>No drums.</desc>
            </li>
          </value>
        </li>
        <li Class="PatchOperationAdd">
          <xpath>/Defs/RitualOutcomeEffectDef[defName="CelebrationPartyDanceDrum"]/comps/li[@Class="RitualOutcomeComp_RitualTargetDefs"]/defs</xpath>
          <value>
            <li>Stone_Campfire</li>
            <li>Stone_DarklightCampfire</li>
          </value>
        </li>
        <li Class="PatchOperationAdd">
          <xpath>/Defs/ThingDef[defName="Drum"]/placeWorkers</xpath>
          <value>
            <li>VEIP.PlaceWorker_LinkToStoneCampfire</li>
            <li>VEIP.PlaceWorker_LinkToDarkStoneCampfire</li>
          </value>
        </li>
        <!-- Darklight stuff <glowColor>(78, 226, 229, 0)</glowColor> -->
        <!-- Stone_DarklightCampfire -->
        <li Class="PatchOperationAdd">
          <xpath>/Defs</xpath>
          <value>
            <ThingDef ParentName="BuildingBase">
              <defName>Stone_DarklightCampfire</defName>
              <label>stone darkcampfire</label>
              <description>Cooks meals, produces less heat but more light, burns out slower than the standard campfire. People who prefer darklight work best with this light source. As with all heat sources, it must be placed indoors so it has a closed space to heat. Refuelable.</description>
              <thingClass>Building_WorkTable</thingClass>
              <category>Building</category>
              <graphicData>
                <texPath>Things/StoneDarkCampfire/StoneDarkCampfire</texPath>
                <graphicClass>Graphic_Single</graphicClass>
                <shaderType>CutoutComplex</shaderType>
                <drawRotated>false</drawRotated>
                <allowFlip>false</allowFlip>
                <damageData>
                  <rect>(0.2,0,0.6,0.1)</rect>
                </damageData>
              </graphicData>
              <uiIconPath>Things/StoneDarkCampfire/StoneDarkCampfire_MenuIcon</uiIconPath>
              <altitudeLayer>Building</altitudeLayer>
              <passability>PassThroughOnly</passability>
              <pathCost>50</pathCost>
              <tickerType>Normal</tickerType>
              <drawerType>RealtimeOnly</drawerType>
              <fillPercent>0.20</fillPercent>
              <statBases>
                <MaxHitPoints>100</MaxHitPoints>
                <WorkToBuild>300</WorkToBuild>
                <Flammability>0</Flammability>
                <WorkTableWorkSpeedFactor>0.6</WorkTableWorkSpeedFactor>
              </statBases>
              <stuffCategories>
                <li>Stony</li>
              </stuffCategories>
              <costStuffCount>20</costStuffCount>
              <selectable>true</selectable>
              <costList>
                <WoodLog>30</WoodLog>                <!-- just the intial wood -->
              </costList>
              <soundImpactDefault>BulletImpact_Ground</soundImpactDefault>
              <leaveResourcesWhenKilled>false</leaveResourcesWhenKilled>
              <resourcesFractionWhenDeconstructed>0</resourcesFractionWhenDeconstructed>
              <placeWorkers>
                <li>PlaceWorker_PreventInteractionSpotOverlap</li>
                <li>PlaceWorker_Heater</li>
                <li>PlaceWorker_MeditationOffsetBuildingsNear</li>
              </placeWorkers>
              <drawPlaceWorkersWhileSelected>true</drawPlaceWorkersWhileSelected>
              <comps>
                <li Class="CompProperties_Refuelable">
                  <fuelConsumptionRate>10.0</fuelConsumptionRate>
                  <fuelCapacity>20.0</fuelCapacity>
                  <fuelConsumptionPerTickInRain>0.0006</fuelConsumptionPerTickInRain>
                  <fuelFilter>
                    <thingDefs>
                      <li>WoodLog</li>
                    </thingDefs>
                  </fuelFilter>
                  <initialFuelPercent>1</initialFuelPercent>
                  <showAllowAutoRefuelToggle>true</showAllowAutoRefuelToggle>
                </li>
                <li Class="CompProperties_Glower">
                  <glowRadius>10</glowRadius>
                  <glowColor>(78, 226, 229, 0)</glowColor>                  <!-- This is a specific darklight color, make sure it matches DarklightUtility.IsDarklight -->
                </li>
                <li Class="CompProperties_HeatPusher">
                  <compClass>CompHeatPusherPowered</compClass>
                  <heatPerSecond>21</heatPerSecond>
                  <heatPushMaxTemperature>28</heatPushMaxTemperature>
                </li>
                <li Class="CompProperties_DarklightOverlay">
                  <fireSize>1</fireSize>
                </li>
                <li>
                  <compClass>CompGatherSpot</compClass>
                </li>
                <li Class="CompProperties_MeditationFocus">
                  <statDef>MeditationFocusStrength</statDef>
                  <focusTypes>
                    <li>Flame</li>
                  </focusTypes>
                  <offsets>
                    <li Class="FocusStrengthOffset_Lit">
                      <offset>0.12</offset>
                    </li>
                    <li Class="FocusStrengthOffset_BuildingDefsLit">
                      <defs>
                        <li>TorchLamp</li>
                        <li>Campfire</li>
                        <li>Stone_Campfire</li>
                        <li>Stone_DarklightCampfire</li>
                        <li MayRequire="Ludeon.RimWorld.Royalty">Brazier</li>
                        <li MayRequire="Ludeon.RimWorld.Royalty,Ludeon.RimWorld.Ideology">DarklightBrazier</li>
                        <li MayRequire="Ludeon.RimWorld.Ideology">Darktorch</li>
                        <li MayRequire="Ludeon.RimWorld.Ideology">DarktorchFungus</li>
                        <li MayRequire="OskarPotocki.VFE.Vikings">VFEV_DarkHearth</li>
                        <li MayRequire="OskarPotocki.VFE.Vikings">VFEV_Hearth</li>
                        <li MayRequire="OskarPotocki.VanillaFactionsExpanded.MedievalModule">VFEM_DarkCandle</li>
                        <li MayRequire="OskarPotocki.VanillaFactionsExpanded.MedievalModule">VFEM_WallTorchDarkLamp</li>
                      </defs>
                      <offsetPerBuilding>0.02</offsetPerBuilding>
                      <radius>9.9</radius>
                      <maxBuildings>8</maxBuildings>
                      <explanationKey>MeditationFocusPerFlame</explanationKey>
                      <explanationKeyAbstract>MeditationFocusPerFlameAbstract</explanationKeyAbstract>
                    </li>
                  </offsets>
                </li>
              </comps>
              <designationCategory>Temperature</designationCategory>
              <hasInteractionCell>True</hasInteractionCell>
              <interactionCellOffset>(0,0,-1)</interactionCellOffset>
              <inspectorTabs>
                <li>ITab_Bills</li>
              </inspectorTabs>
              <building>
                <isMealSource>true</isMealSource>
                <spawnedConceptLearnOpportunity>BillsTab</spawnedConceptLearnOpportunity>
                <artificialForMeditationPurposes>false</artificialForMeditationPurposes>
                <destroySound>BuildingDestroyed_Wood_Small</destroySound>
              </building>
              <modExtensions>
                <li Class="RecipeInheritance.ThingDefExtension">
                  <inheritRecipesFrom>
                    <li>Campfire</li>
                  </inheritRecipesFrom>
                </li>
              </modExtensions>
            </ThingDef>
          </value>
        </li>
      </operations>
    </match>
  </Operation>
</Patch>